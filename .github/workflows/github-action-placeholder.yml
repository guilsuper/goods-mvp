# For more information please look here:
# .github/workflows/readme.txt
# and
# https://docs.github.com/en/actions

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # allow workflow to be triggered manually
  workflow_dispatch:

jobs:
  #########################################################################
  pre-commit:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
        cache: 'pip'

    - name: "Setup .env"
      working-directory: ./backend
      run: |
        echo 'SECRET_KEY="SECRET_KEY_FOR_TESTING"' >> .env
        echo 'FRONTEND_HOST="http://localhost"' >> .env

    - name: Run pre-commit
      uses: pre-commit/action@v3.0.0

  #########################################################################
  backend-build-and-tests:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: 3.11
        cache: 'pip'

    - name: Install Dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: "Setup .env for testing"
      working-directory: ./backend
      run: |
        echo 'SECRET_KEY="SECRET_KEY_FOR_TESTING"' >> .env
        echo 'DEBUG="True"' >> .env
        echo 'FRONTEND_HOST="http://localhost"' >> .env

    - name: Run Tests
      working-directory: ./backend
      run: |
        pytest --junitxml=../test-results/pytest.xml

    - name: Upload Backend Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: test-results

  #########################################################################
  frontend-build-and-tests:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      working-directory: ./frontend
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install
      working-directory: ./frontend
      run: |
        npm clean-install

    - name: Build
      working-directory: ./frontend
      run: |
        npm run build --if-present

    - name: Run Frontend Tests
      working-directory: ./frontend
      run: |
        pytest --junitxml=../test-results/nodejs.xml

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: test-results

  #########################################################################
  e2e-tests:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - uses: isbang/compose-action@v1.5.1
      with:
        compose-file: "./docker-compose.test.yaml"
        up-flags: "--abort-on-container-exit --exit-code-from=e2e-tests"

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: test-results

  #########################################################################
  publish-tests:
    name: Publish Test Results
    runs-on: ubuntu-22.04
    needs: [backend-build-and-tests, frontend-build-and-tests, e2e-tests]

    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write

    if: always()

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: test-results
        path: test-results
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: |
          test-results/**/*.xml
          test-results/**/*.trx
          test-results/**/*.json
